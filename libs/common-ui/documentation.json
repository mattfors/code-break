{
    "pipes": [],
    "interfaces": [],
    "injectables": [],
    "guards": [],
    "interceptors": [],
    "classes": [],
    "directives": [],
    "components": [
        {
            "name": "CodeAttemptResultViewComponent",
            "id": "component-CodeAttemptResultViewComponent-df8438096e9f057b170a1af07c7ce7b8e9377d2c8c1c6eec5eb2acd6cdac36b6779f65be6c2490a85dfdbd4d34daadc6c739b93ed96b66c11ae1ed9635655992",
            "file": "libs/common-ui/src/lib/code-attempt-result-view/code-attempt-result-view.component.ts",
            "changeDetection": "ChangeDetectionStrategy.OnPush",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "code-break-code-attempt-result-view",
            "styleUrls": [
                "./code-attempt-result-view.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./code-attempt-result-view.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "results",
                    "defaultValue": "[]",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nAn array representing the results of analyzing a code attempt.\n",
                    "description": "<p>An array representing the results of analyzing a code attempt.</p>\n",
                    "line": 22,
                    "type": "(\"partial\" | \"exact\" | \"none\")[]",
                    "decorators": []
                }
            ],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "<p>This component is responsible for rendering a single row of results which indicates\nto the user the correctness of a code attempt.</p>\n",
            "rawdescription": "\n\nThis component is responsible for rendering a single row of results which indicates\nto the user the correctness of a code attempt.\n",
            "type": "component",
            "sourceCode": "import { ChangeDetectionStrategy, Component, Input } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\n/**\n * This component is responsible for rendering a single row of results which indicates\n * to the user the correctness of a code attempt.\n */\n@Component({\n  selector: 'code-break-code-attempt-result-view',\n  standalone: true,\n  imports: [CommonModule],\n  templateUrl: './code-attempt-result-view.component.html',\n  styleUrls: ['./code-attempt-result-view.component.scss'],\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class CodeAttemptResultViewComponent {\n\n  /**\n   * An array representing the results of analyzing a code attempt.\n   */\n  @Input()\n  results: ('partial' | 'exact' | 'none')[] = [];\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": ".code-breaker-result-item {\n  border-style: solid;\n  border-width: 1px;\n  height: 10px;\n  width: 10px;\n  border-radius: 50%;\n}\n\n.code-break-results {\n  display: flex;\n}\n\n.code-breaker-code-result-exact {\n  background-color: crimson;\n}\n.code-breaker-code-result-partial {\n  background-color: yellow;\n}\n",
                    "styleUrl": "./code-attempt-result-view.component.scss"
                }
            ],
            "stylesData": "",
            "templateData": "<div class=\"code-break-results\">\n  <div *ngFor=\"let result of results;\"\n       class=\"code-breaker-result-item\"\n       [class]=\"'code-breaker-code-result-'+result\">\n  </div>\n</div>\n"
        },
        {
            "name": "CodeAttemptViewComponent",
            "id": "component-CodeAttemptViewComponent-2c071cb950de4394e94103dc3194392c918fa164792a9bfa04b18901b58092d09e9772256e4877b1b19ba52e5218e0b9752a125180728595dce90d33b49d5297",
            "file": "libs/common-ui/src/lib/code-attempt-view/code-attempt-view.component.ts",
            "changeDetection": "ChangeDetectionStrategy.OnPush",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "code-break-code-attempt-view",
            "styleUrls": [
                "./code-attempt-view.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./code-attempt-view.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "codes",
                    "defaultValue": "[]",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nAn array of codes\n",
                    "description": "<p>An array of codes</p>\n",
                    "line": 23,
                    "type": "number[]",
                    "decorators": []
                },
                {
                    "name": "columns",
                    "defaultValue": "0",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 26,
                    "type": "number",
                    "decorators": []
                },
                {
                    "name": "enabled",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 29,
                    "type": "boolean",
                    "decorators": []
                },
                {
                    "name": "selectedColumn",
                    "defaultValue": "null",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 32,
                    "type": "number | null",
                    "decorators": []
                }
            ],
            "outputsClass": [
                {
                    "name": "columnClick",
                    "defaultValue": "new EventEmitter<number>()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 35,
                    "type": "EventEmitter"
                }
            ],
            "propertiesClass": [],
            "methodsClass": [
                {
                    "name": "isColumnActive",
                    "args": [
                        {
                            "name": "index",
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "boolean",
                    "typeParameters": [],
                    "line": 43,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "index",
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "onCodeClick",
                    "args": [
                        {
                            "name": "index",
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 37,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "index",
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "<p>This component displays the color codes of an attempt.</p>\n",
            "rawdescription": "\n\nThis component displays the color codes of an attempt.\n",
            "type": "component",
            "sourceCode": "import { ChangeDetectionStrategy, Component, EventEmitter, Input, Output } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { MatSlideToggleModule } from '@angular/material/slide-toggle';\nimport { MatRippleModule } from '@angular/material/core';\n\n/**\n * This component displays the color codes of an attempt.\n */\n@Component({\n  selector: 'code-break-code-attempt-view',\n  standalone: true,\n  imports: [CommonModule, MatSlideToggleModule, MatRippleModule],\n  templateUrl: './code-attempt-view.component.html',\n  styleUrls: ['./code-attempt-view.component.scss'],\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class CodeAttemptViewComponent {\n\n  /**\n   * An array of codes\n   */\n  @Input()\n  codes: number[] = [];\n\n  @Input()\n  columns = 0;\n\n  @Input()\n  enabled = false;\n\n  @Input()\n  selectedColumn: number | null = null;\n\n  @Output()\n  columnClick = new EventEmitter<number>();\n\n  onCodeClick(index: number): void {\n    if (this.enabled) {\n      this.columnClick.emit(index);\n    }\n  }\n\n  isColumnActive(index: number): boolean {\n    return this.selectedColumn === index && this.enabled;\n  }\n\n  get codeColumns(): number[] {\n    return [...this.codes, ...this.empties];\n  }\n\n  get empties(): number[] {\n    return Array(Math.max(this.columns - this.codes.length, 0)).fill(undefined);\n  }\n\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": ".code-breaker-result {\n  display: flex;\n  user-select: none;\n  -webkit-user-select: none;\n  -moz-user-select: none;\n  -webkit-user-drag: none;\n  -webkit-tap-highlight-color: transparent;\n}\n\n.code-breaker-result-item-enabled {\n  cursor: pointer;\n}\n\n.code-breaker-result-item {\n  border-style: solid;\n  height: 45px;\n  width: 45px;\n  border-radius: 50%;\n  border-width: 2px;\n}\n\n.code-breaker-code-inactive {\n  border-color: #ffffff;\n  background-color: #f1f1f1;\n}\n\n.code-breaker-code-active {\n  border-color: black;\n  border-style: dashed;\n  animation-name: spin;\n  animation-duration: 5000ms;\n  animation-iteration-count: infinite;\n  animation-timing-function: linear;\n}\n\n@keyframes spin {\n  from {\n    transform:rotate(0deg);\n  }\n  to {\n    transform:rotate(360deg);\n  }\n}\n\n.code-breaker-code-value-0 {\n  background-color: darkviolet;\n}\n.code-breaker-code-value-1 {\n  background-color: steelblue;\n}\n.code-breaker-code-value-2 {\n  background-color: aqua;\n}\n.code-breaker-code-value-3 {\n  background-color: chartreuse;\n}\n.code-breaker-code-value-4 {\n  background-color: yellow;\n}\n.code-breaker-code-value-5 {\n  background-color: crimson;\n}\n",
                    "styleUrl": "./code-attempt-view.component.scss"
                }
            ],
            "stylesData": "",
            "accessors": {
                "codeColumns": {
                    "name": "codeColumns",
                    "getSignature": {
                        "name": "codeColumns",
                        "type": "[]",
                        "returnType": "number[]",
                        "line": 47
                    }
                },
                "empties": {
                    "name": "empties",
                    "getSignature": {
                        "name": "empties",
                        "type": "[]",
                        "returnType": "number[]",
                        "line": 51
                    }
                }
            },
            "templateData": "<div class=\"code-breaker-result\">\n  <div matRipple\n       role=\"button\"\n       *ngFor=\"let code of codeColumns; let i = index\"\n       class=\"code-breaker-result-item\"\n       [class]=\"'code-breaker-code-value-'+code\"\n       [ngClass]=\"isColumnActive(i) ? 'code-breaker-code-active' : 'code-breaker-code-inactive'\"\n       [class.code-breaker-result-item-enabled]=\"enabled\"\n       [matRippleDisabled]=\"!enabled\"\n       (click)=\"onCodeClick(i)\">\n  </div>\n</div>\n"
        },
        {
            "name": "GameBoardComponent",
            "id": "component-GameBoardComponent-4bba31dc18752ca1223ef0e5f015465f9abb2b1be224a69cf45d3683297daf327f8822803cf76f4e75f73e2aaaf415fc67d5caf6b8ff3af362f9bced0c5a5614",
            "file": "libs/common-ui/src/lib/game-board/game-board.component.ts",
            "changeDetection": "ChangeDetectionStrategy.OnPush",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "code-break-game-board",
            "styleUrls": [
                "./game-board.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./game-board.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "config",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 26,
                    "type": "GameDefaults",
                    "decorators": []
                },
                {
                    "name": "enabled",
                    "defaultValue": "true",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 33,
                    "type": "boolean",
                    "decorators": []
                },
                {
                    "name": "rowData",
                    "defaultValue": "[]",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 23,
                    "type": "GameBoardGridDataRow[]",
                    "decorators": []
                }
            ],
            "outputsClass": [
                {
                    "name": "codeSubmit",
                    "defaultValue": "new EventEmitter<number[]>()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 36,
                    "type": "EventEmitter<number[]>"
                }
            ],
            "propertiesClass": [
                {
                    "name": "_config",
                    "defaultValue": "{columns: 4, rows: 10, numberOfColors: 6}",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "GameDefaults",
                    "optional": false,
                    "description": "",
                    "line": 30
                },
                {
                    "name": "activeRowData",
                    "defaultValue": "Array(this._config.columns) as number[]",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number[]",
                    "optional": false,
                    "description": "",
                    "line": 38
                },
                {
                    "name": "selectedColumn",
                    "defaultValue": "0",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 39
                }
            ],
            "methodsClass": [
                {
                    "name": "colorClicked",
                    "args": [
                        {
                            "name": "color",
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 63,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "color",
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "reset",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 58,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "submitAttempt",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 53,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "<p>This is a stateless game board component which displays code attempt, and their results, and and\ninput row for selecting the colors of the next attempt.</p>\n",
            "rawdescription": "\n\nThis is a stateless game board component which displays code attempt, and their results, and and\ninput row for selecting the colors of the next attempt.\n",
            "type": "component",
            "sourceCode": "import { ChangeDetectionStrategy, Component, EventEmitter, Input, Output } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { CodeAttemptViewComponent } from '../code-attempt-view/code-attempt-view.component';\nimport { GameBoardGridComponent } from '../game-board-grid/game-board-grid.component';\nimport { GameBoardGridDataRow } from '../game-board-grid/game-board-grid.models';\nimport { GameDefaults } from '@code-break/game-configuration';\n\n/**\n * This is a stateless game board component which displays code attempt, and their results, and and\n * input row for selecting the colors of the next attempt.\n */\n@Component({\n  selector: 'code-break-game-board',\n  standalone: true,\n  imports: [CommonModule, CodeAttemptViewComponent, GameBoardGridComponent],\n  templateUrl: './game-board.component.html',\n  styleUrls: ['./game-board.component.scss'],\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class GameBoardComponent {\n\n  @Input()\n  rowData: GameBoardGridDataRow[] = [];\n\n  @Input()\n  set config(config: GameDefaults) {\n    this._config = config;\n    this.reset();\n  }\n  _config: GameDefaults = {columns: 4, rows: 10, numberOfColors: 6};\n\n  @Input()\n  enabled = true;\n\n  @Output()\n  codeSubmit: EventEmitter<number[]> = new EventEmitter<number[]>();\n\n  activeRowData: number[] = Array(this._config.columns) as number[];\n  selectedColumn = 0;\n\n  get colorOptions(): number[] {\n    return Array.from({ length: this._config.numberOfColors }, (v, i) => i);\n  }\n\n  get activeRowComplete(): boolean {\n    return Object.values(this.activeRowData).length === this.activeRowData.length;\n  }\n\n  get disableSubmit(): boolean {\n    return !this.enabled || !this.activeRowComplete;\n  }\n\n  submitAttempt(): void {\n    this.codeSubmit.emit(this.activeRowData);\n    this.reset();\n  }\n\n  reset(): void {\n    this.activeRowData = Array(this._config.columns) as number[];\n    this.selectedColumn = 0;\n  }\n\n  colorClicked(color: number) {\n    this.activeRowData[this.selectedColumn] = color;\n    this.selectedColumn = (this.selectedColumn + 1) % this._config.columns;\n  }\n\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "",
                    "styleUrl": "./game-board.component.scss"
                }
            ],
            "stylesData": "",
            "accessors": {
                "config": {
                    "name": "config",
                    "setSignature": {
                        "name": "config",
                        "type": "void",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "args": [
                            {
                                "name": "config",
                                "type": "GameDefaults",
                                "deprecated": false,
                                "deprecationMessage": ""
                            }
                        ],
                        "returnType": "void",
                        "line": 26,
                        "jsdoctags": [
                            {
                                "name": "config",
                                "type": "GameDefaults",
                                "deprecated": false,
                                "deprecationMessage": "",
                                "tagName": {
                                    "text": "param"
                                }
                            }
                        ]
                    }
                },
                "colorOptions": {
                    "name": "colorOptions",
                    "getSignature": {
                        "name": "colorOptions",
                        "type": "[]",
                        "returnType": "number[]",
                        "line": 41
                    }
                },
                "activeRowComplete": {
                    "name": "activeRowComplete",
                    "getSignature": {
                        "name": "activeRowComplete",
                        "type": "boolean",
                        "returnType": "boolean",
                        "line": 45
                    }
                },
                "disableSubmit": {
                    "name": "disableSubmit",
                    "getSignature": {
                        "name": "disableSubmit",
                        "type": "boolean",
                        "returnType": "boolean",
                        "line": 49
                    }
                }
            },
            "templateData": "<code-break-game-board-grid\n  [activeRowData]=\"activeRowData\"\n  [enabled]=\"enabled\"\n  [rowData]=\"rowData\"\n  [config]=\"_config\"\n  (columnClick)=\"selectedColumn = $event\"\n  [selectedColumn]=\"selectedColumn\"\n></code-break-game-board-grid>\n<code-break-code-attempt-view\n  data-testid=\"game-board-color-picker\"\n  [codes]=\"colorOptions\"\n  [enabled]=\"enabled\"\n  (columnClick)=\"colorClicked($event)\"></code-break-code-attempt-view>\n<button (click)=\"submitAttempt()\" [disabled]=\"disableSubmit\" data-testid=\"game-board-submit-attempt\">Submit</button>\n"
        },
        {
            "name": "GameBoardGridComponent",
            "id": "component-GameBoardGridComponent-cd8cbc88d018e5e97844741f3472b71364c84e7c6d00ee34bb075b3e79b6e8e7c098a79b3c546d546d603da9fa921377ec386a739acb3ef2fd3cb56419b1a266",
            "file": "libs/common-ui/src/lib/game-board-grid/game-board-grid.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "code-break-game-board-grid",
            "styleUrls": [
                "./game-board-grid.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./game-board-grid.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "activeRowData",
                    "defaultValue": "[]",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 28,
                    "type": "number[]",
                    "decorators": []
                },
                {
                    "name": "config",
                    "defaultValue": "{\n    columns: 4,\n    rows: 10\n  }",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 22,
                    "type": "GameBoardConfiguration",
                    "decorators": []
                },
                {
                    "name": "enabled",
                    "defaultValue": "true",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 37,
                    "type": "boolean",
                    "decorators": []
                },
                {
                    "name": "rowData",
                    "defaultValue": "[]",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 19,
                    "type": "GameBoardGridDataRow[]",
                    "decorators": []
                },
                {
                    "name": "selectedColumn",
                    "defaultValue": "0",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 34,
                    "type": "number",
                    "decorators": []
                }
            ],
            "outputsClass": [
                {
                    "name": "columnClick",
                    "defaultValue": "new EventEmitter<number>()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 31,
                    "type": "EventEmitter"
                }
            ],
            "propertiesClass": [],
            "methodsClass": [
                {
                    "name": "emptyCodeAttempt",
                    "args": [],
                    "optional": false,
                    "returnType": "GameBoardGridDataRow",
                    "typeParameters": [],
                    "line": 55,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        121
                    ]
                },
                {
                    "name": "emptyCodeAttempts",
                    "args": [],
                    "optional": false,
                    "returnType": "GameBoardGridDataRow[]",
                    "typeParameters": [],
                    "line": 51,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        121
                    ]
                },
                {
                    "name": "onColumnClick",
                    "args": [
                        {
                            "name": "index",
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 47,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "index",
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, EventEmitter, Input, Output } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { CodeAttemptResultViewComponent } from '../code-attempt-result-view/code-attempt-result-view.component';\nimport { CodeAttemptViewComponent } from '../code-attempt-view/code-attempt-view.component';\n\nimport { GameBoardConfiguration, GameBoardGridDataRow } from './game-board-grid.models';\n\n\n@Component({\n  selector: 'code-break-game-board-grid',\n  standalone: true,\n  imports: [CommonModule, CodeAttemptViewComponent, CodeAttemptResultViewComponent],\n  templateUrl: './game-board-grid.component.html',\n  styleUrls: ['./game-board-grid.component.scss'],\n})\nexport class GameBoardGridComponent {\n\n  @Input()\n  rowData: GameBoardGridDataRow[] = [];\n\n  @Input()\n  config: GameBoardConfiguration = {\n    columns: 4,\n    rows: 10\n  };\n\n  @Input()\n  activeRowData: number[] = [];\n\n  @Output()\n  columnClick = new EventEmitter<number>();\n\n  @Input()\n  selectedColumn = 0;\n\n  @Input()\n  enabled = true;\n\n  get gridRows(): GameBoardGridDataRow[] {\n    return [...this.rowData, ...this.emptyCodeAttempts()].reverse();\n  }\n\n  get selectedRow(): number {\n    return this.config.rows - this.rowData.length - 1;\n  }\n\n  onColumnClick(index: number): void {\n    this.columnClick.emit(index);\n  }\n\n  private emptyCodeAttempts(): GameBoardGridDataRow[] {\n    return Array(Math.max(this.config.rows - this.rowData.length, 0)).fill(this.emptyCodeAttempt());\n  }\n\n  private emptyCodeAttempt(): GameBoardGridDataRow {\n    return {codes: Array(this.config.columns).fill('none'), results: Array(this.config.columns).fill('none')};\n  }\n\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": ".game-board-grid {\n  display: flex;\n}\n",
                    "styleUrl": "./game-board-grid.component.scss"
                }
            ],
            "stylesData": "",
            "accessors": {
                "gridRows": {
                    "name": "gridRows",
                    "getSignature": {
                        "name": "gridRows",
                        "type": "[]",
                        "returnType": "GameBoardGridDataRow[]",
                        "line": 39
                    }
                },
                "selectedRow": {
                    "name": "selectedRow",
                    "getSignature": {
                        "name": "selectedRow",
                        "type": "number",
                        "returnType": "number",
                        "line": 43
                    }
                }
            },
            "templateData": "<div class=\"game-board-grid\" *ngFor=\"let row of gridRows; let i = index\">\n  <code-break-code-attempt-result-view\n    [results]=\"row.results\"></code-break-code-attempt-result-view>\n  <code-break-code-attempt-view\n    [columns]=\"config.columns\"\n    [selectedColumn]=\"i === selectedRow ? selectedColumn : null\"\n    [codes]=\"i === selectedRow ? activeRowData : row.codes\"\n    [enabled]=\"i === selectedRow  && enabled\"\n    (columnClick)=\"onColumnClick($event)\"\n  ></code-break-code-attempt-view>\n</div>\n"
        }
    ],
    "modules": [],
    "miscellaneous": {
        "variables": [
            {
                "name": "AddingAttempt",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "libs/common-ui/src/lib/game-board/game-board.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "StoryObj",
                "defaultValue": "{\n  parameters: {\n    docs: {\n      description: {\n        story: 'Demonstrates the code attempt input and submit functionality.'\n      },\n    },\n  },\n  args: {\n    rowData: [\n      {results: ['exact', 'partial', 'partial', 'none'], codes: [0,1,2,3]},\n      {results: ['partial', 'partial', 'partial', 'none'], codes: [5,4,3,2]}\n    ],\n    config: { columns: 4, rows: 4, numberOfColors: 6 },\n  },\n  play: async ({ args, canvasElement }) => {\n    const canvas = within(canvasElement);\n    const colorPicker= within(canvas.getByTestId('game-board-color-picker'));\n    const colorPickerButtons = colorPicker.getAllByRole('button');\n    const submitAttempt = canvas.getByTestId('game-board-submit-attempt');\n\n    await expect(submitAttempt).toBeDisabled()\n    await userEvent.click(colorPickerButtons[0]);\n    await userEvent.click(colorPickerButtons[1]);\n    await userEvent.click(colorPickerButtons[2]);\n    await userEvent.click(colorPickerButtons[3]);\n    await userEvent.click(colorPickerButtons[4]);\n\n    await expect(submitAttempt).not.toBeDisabled();\n    await userEvent.click(submitAttempt);\n\n    await expect(submitAttempt).toBeDisabled()\n\n    await expect(args['codeSubmit']).toHaveBeenCalled();\n\n  },\n}"
            },
            {
                "name": "Completed",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "libs/common-ui/src/lib/code-attempt-result-view/code-attempt-result-view.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "object",
                "defaultValue": "{\n  render: (args: CodeAttemptResultViewComponent) => ({\n    props: args,\n  }),\n  args: {\n    results: ['exact', 'exact', 'exact', 'exact'],\n  },\n}"
            },
            {
                "name": "PartiallyCompleted",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "libs/common-ui/src/lib/code-attempt-result-view/code-attempt-result-view.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "object",
                "defaultValue": "{\n  render: (args: CodeAttemptResultViewComponent) => ({\n    props: args,\n  }),\n  args: {\n    results: ['exact', 'partial', 'none', 'none'],\n  },\n}"
            },
            {
                "name": "Primary",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "libs/common-ui/src/lib/code-attempt-result-view/code-attempt-result-view.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "object",
                "defaultValue": "{\n  render: (args: CodeAttemptResultViewComponent) => ({\n    props: args,\n  }),\n  args: {\n    results: ['none', 'none', 'none', 'none'],\n  },\n}"
            },
            {
                "name": "Primary",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "libs/common-ui/src/lib/code-attempt-view/code-attempt-view.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "object",
                "defaultValue": "{\n  render: (args: CodeAttemptViewComponent) => ({\n    props: args,\n  }),\n  args: {\n    codes: [0,1,2,3,4,5]\n  },\n}"
            },
            {
                "name": "Primary",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "libs/common-ui/src/lib/game-board-grid/game-board-grid.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "object",
                "defaultValue": "{\n  render: (args: GameBoardGridComponent) => ({\n    props: args,\n  }),\n  args: {\n    rowData: [\n      {results: ['exact', 'partial', 'partial', 'none', 'none', 'none'], codes: [0,1,2,3,4,5]},\n      {results: ['partial', 'partial', 'partial', 'none', 'none', 'none'], codes: [5,4,3,2,1,0]}\n    ],\n    config: {rows: 5, columns: 6},\n  },\n}"
            },
            {
                "name": "Primary",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "libs/common-ui/src/lib/game-board/game-board.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "object",
                "defaultValue": "{\n  render: (args: GameBoardComponent) => ({\n    props: args,\n  }),\n  args: {\n    rowData: [\n      {results: ['exact', 'partial', 'partial', 'none'], codes: [0,1,2,3]},\n      {results: ['partial', 'partial', 'partial', 'none'], codes: [5,4,3,2]}\n    ],\n    config: { columns: 4, rows: 6, numberOfColors: 6 },\n  },\n}"
            },
            {
                "name": "Selection",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "libs/common-ui/src/lib/code-attempt-view/code-attempt-view.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "object",
                "defaultValue": "{\n  render: (args: CodeAttemptViewComponent) => ({\n    props: args,\n  }),\n  args: {\n    codes: [0,1,2,3,4,5],\n    selectedColumn: 3\n  },\n}"
            }
        ],
        "functions": [],
        "typealiases": [],
        "enumerations": [],
        "groupedVariables": {
            "libs/common-ui/src/lib/game-board/game-board.component.stories.ts": [
                {
                    "name": "AddingAttempt",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "libs/common-ui/src/lib/game-board/game-board.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "StoryObj",
                    "defaultValue": "{\n  parameters: {\n    docs: {\n      description: {\n        story: 'Demonstrates the code attempt input and submit functionality.'\n      },\n    },\n  },\n  args: {\n    rowData: [\n      {results: ['exact', 'partial', 'partial', 'none'], codes: [0,1,2,3]},\n      {results: ['partial', 'partial', 'partial', 'none'], codes: [5,4,3,2]}\n    ],\n    config: { columns: 4, rows: 4, numberOfColors: 6 },\n  },\n  play: async ({ args, canvasElement }) => {\n    const canvas = within(canvasElement);\n    const colorPicker= within(canvas.getByTestId('game-board-color-picker'));\n    const colorPickerButtons = colorPicker.getAllByRole('button');\n    const submitAttempt = canvas.getByTestId('game-board-submit-attempt');\n\n    await expect(submitAttempt).toBeDisabled()\n    await userEvent.click(colorPickerButtons[0]);\n    await userEvent.click(colorPickerButtons[1]);\n    await userEvent.click(colorPickerButtons[2]);\n    await userEvent.click(colorPickerButtons[3]);\n    await userEvent.click(colorPickerButtons[4]);\n\n    await expect(submitAttempt).not.toBeDisabled();\n    await userEvent.click(submitAttempt);\n\n    await expect(submitAttempt).toBeDisabled()\n\n    await expect(args['codeSubmit']).toHaveBeenCalled();\n\n  },\n}"
                },
                {
                    "name": "Primary",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "libs/common-ui/src/lib/game-board/game-board.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "object",
                    "defaultValue": "{\n  render: (args: GameBoardComponent) => ({\n    props: args,\n  }),\n  args: {\n    rowData: [\n      {results: ['exact', 'partial', 'partial', 'none'], codes: [0,1,2,3]},\n      {results: ['partial', 'partial', 'partial', 'none'], codes: [5,4,3,2]}\n    ],\n    config: { columns: 4, rows: 6, numberOfColors: 6 },\n  },\n}"
                }
            ],
            "libs/common-ui/src/lib/code-attempt-result-view/code-attempt-result-view.component.stories.ts": [
                {
                    "name": "Completed",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "libs/common-ui/src/lib/code-attempt-result-view/code-attempt-result-view.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "object",
                    "defaultValue": "{\n  render: (args: CodeAttemptResultViewComponent) => ({\n    props: args,\n  }),\n  args: {\n    results: ['exact', 'exact', 'exact', 'exact'],\n  },\n}"
                },
                {
                    "name": "PartiallyCompleted",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "libs/common-ui/src/lib/code-attempt-result-view/code-attempt-result-view.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "object",
                    "defaultValue": "{\n  render: (args: CodeAttemptResultViewComponent) => ({\n    props: args,\n  }),\n  args: {\n    results: ['exact', 'partial', 'none', 'none'],\n  },\n}"
                },
                {
                    "name": "Primary",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "libs/common-ui/src/lib/code-attempt-result-view/code-attempt-result-view.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "object",
                    "defaultValue": "{\n  render: (args: CodeAttemptResultViewComponent) => ({\n    props: args,\n  }),\n  args: {\n    results: ['none', 'none', 'none', 'none'],\n  },\n}"
                }
            ],
            "libs/common-ui/src/lib/code-attempt-view/code-attempt-view.component.stories.ts": [
                {
                    "name": "Primary",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "libs/common-ui/src/lib/code-attempt-view/code-attempt-view.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "object",
                    "defaultValue": "{\n  render: (args: CodeAttemptViewComponent) => ({\n    props: args,\n  }),\n  args: {\n    codes: [0,1,2,3,4,5]\n  },\n}"
                },
                {
                    "name": "Selection",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "libs/common-ui/src/lib/code-attempt-view/code-attempt-view.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "object",
                    "defaultValue": "{\n  render: (args: CodeAttemptViewComponent) => ({\n    props: args,\n  }),\n  args: {\n    codes: [0,1,2,3,4,5],\n    selectedColumn: 3\n  },\n}"
                }
            ],
            "libs/common-ui/src/lib/game-board-grid/game-board-grid.component.stories.ts": [
                {
                    "name": "Primary",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "libs/common-ui/src/lib/game-board-grid/game-board-grid.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "object",
                    "defaultValue": "{\n  render: (args: GameBoardGridComponent) => ({\n    props: args,\n  }),\n  args: {\n    rowData: [\n      {results: ['exact', 'partial', 'partial', 'none', 'none', 'none'], codes: [0,1,2,3,4,5]},\n      {results: ['partial', 'partial', 'partial', 'none', 'none', 'none'], codes: [5,4,3,2,1,0]}\n    ],\n    config: {rows: 5, columns: 6},\n  },\n}"
                }
            ]
        },
        "groupedFunctions": {},
        "groupedEnumerations": {},
        "groupedTypeAliases": {}
    },
    "routes": [],
    "coverage": {
        "count": 11,
        "status": "low",
        "files": [
            {
                "filePath": "libs/common-ui/src/lib/code-attempt-result-view/code-attempt-result-view.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Completed",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/common-ui/src/lib/code-attempt-result-view/code-attempt-result-view.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "PartiallyCompleted",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/common-ui/src/lib/code-attempt-result-view/code-attempt-result-view.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Primary",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/common-ui/src/lib/code-attempt-result-view/code-attempt-result-view.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "CodeAttemptResultViewComponent",
                "coveragePercent": 100,
                "coverageCount": "2/2",
                "status": "very-good"
            },
            {
                "filePath": "libs/common-ui/src/lib/code-attempt-view/code-attempt-view.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Primary",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/common-ui/src/lib/code-attempt-view/code-attempt-view.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Selection",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/common-ui/src/lib/code-attempt-view/code-attempt-view.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "CodeAttemptViewComponent",
                "coveragePercent": 25,
                "coverageCount": "2/8",
                "status": "low"
            },
            {
                "filePath": "libs/common-ui/src/lib/game-board-grid/game-board-grid.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Primary",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/common-ui/src/lib/game-board-grid/game-board-grid.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "GameBoardGridComponent",
                "coveragePercent": 0,
                "coverageCount": "0/10",
                "status": "low"
            },
            {
                "filePath": "libs/common-ui/src/lib/game-board/game-board.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "AddingAttempt",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/common-ui/src/lib/game-board/game-board.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Primary",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/common-ui/src/lib/game-board/game-board.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "GameBoardComponent",
                "coveragePercent": 9,
                "coverageCount": "1/11",
                "status": "low"
            }
        ]
    }
}